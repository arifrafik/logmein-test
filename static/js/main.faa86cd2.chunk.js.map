{"version":3,"sources":["icon/logo.png","components/header/header.js","components/social-media-picker/SocialMediaPicker.js","components/stock-market-picker/StockMarketSymbolsPicker.js","components/date-window/DateWindow.js","components/config.js","components/search-bar/SearchBar.js","services/Utils.js","services/services.js","components/recommendation-table/RecommendationTable.js","components/chart/chart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","logo","alt","appName","SocialMediaPicker","onChange","this","onSocialMediaTypeChange","options","map","object","i","value","key","name","React","Component","StockMarketSymbolsPicker","onStockMarketSymbolChange","DateWindow","startDate","defaultDate","STOCK_MARKET_SYMBOLS","SOCIAL_MEDIA_TYPES","SearchBar","today","Date","day","getDate","tenDaysBack","month","getMonth","year","getFullYear","date","tenDaysAgo","stockMarketSymbol","socialMedia","bind","evt","selectedSymbol","target","updateTableData","selectedSocialMediaType","getRandomInt","min","max","Math","ceil","floor","random","randomDataGenerator","stockSymbol","socialMediaType","dates","getLastTenDaysDate","data","index","length","mediaCount","socialMediaCountGenerator","stockMarketPrice","stockPriceGenerator","recommendation","recommendationAlgorithm","elt","push","randomValueByStockSymbol","toUpperCase","randomValueBysocialMediaType","stockPrice","socialMediaCount","toString","endsWith","RecommendationTable","renderRecommendation","class","getTableContent","arr","id","nextItem","j","hAxis","title","vAxis","series","1","curveType","ExampleChart","convertedData","rawData","element","tmp","reverse","unshift","convertData","console","table","chartType","width","height","legendToggle","App","state","tableData","loading","setState","prevState","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.faa86cd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3ec283fd.png\";","import React from \"react\";\r\nimport logo from \"./../../icon/logo.png\";\r\nimport \"./header.css\";\r\n\r\nexport const Header = props => {\r\n  return (\r\n    <header className=\"main-header\">\r\n      <div className=\"header-container\">\r\n        <div className=\"header-item app-name\">\r\n          <img src={logo} className=\"app-logo\" alt={props.appName} />\r\n        </div>\r\n        <div className=\"header-item-center\" />\r\n        <div className=\"header-item\"></div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./social-media-picker.css\";\r\nimport \"./../common-styles.css\";\r\nclass SocialMediaPicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"search-bar-item social-media-container\">\r\n        <select\r\n          className=\"select-css\"\r\n          onChange={this.props.onSocialMediaTypeChange}\r\n        >\r\n          {this.props.options.map(function(object, i) {\r\n            return (\r\n              <option value={object.value} key={i}>\r\n                {object.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocialMediaPicker;\r\n","import React from \"react\";\r\nimport \"./stock-market-symbols-picker.css\";\r\nimport \"./../common-styles.css\";\r\n\r\nclass StockMarketSymbolsPicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"search-bar-item stock-market-container\">\r\n        <select\r\n          className=\"select-css\"\r\n          onChange={this.props.onStockMarketSymbolChange}\r\n        >\r\n          {this.props.options.map(function(object, i) {\r\n            return (\r\n              <option value={object.value} key={i}>\r\n                {object.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StockMarketSymbolsPicker;\r\n","import React from \"react\";\r\nimport \"./date-window.css\";\r\n\r\nclass DateWindow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-bar-item date-window-container\">\r\n        From {this.props.startDate} To {this.props.defaultDate}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateWindow;\r\n","export const STOCK_MARKET_SYMBOLS = [\r\n  { name: \"NASDAQ\", value: \"NASDAQ\" },\r\n  { name: \"NYSE\", value: \"NYSE\" },\r\n  { name: \"DOWJNS\", value: \"DOWJNS\" },\r\n  { name: \"TSX\", value: \"TSX\" }\r\n];\r\n\r\nexport const SOCIAL_MEDIA_TYPES = [\r\n  { name: \"FACEBOOK\", value: \"FACEBOOK\" },\r\n  { name: \"TWITTER\", value: \"TWITTER\" }\r\n];\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nimport SocialMediaPicker from \"./../social-media-picker/SocialMediaPicker\";\r\nimport StockMarketSymbolsPicker from \"./../stock-market-picker/StockMarketSymbolsPicker\";\r\nimport DateWindow from \"./../date-window/DateWindow\";\r\nimport { STOCK_MARKET_SYMBOLS, SOCIAL_MEDIA_TYPES } from \"./../config\";\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    let today = new Date();\r\n    let day = today.getDate();\r\n    let tenDaysBack = today.getDate() - 10;\r\n\r\n    let month = today.getMonth() + 1;\r\n    let year = today.getFullYear();\r\n    this.date = `${day}-${month}-${year}`;\r\n    this.tenDaysAgo = `${tenDaysBack}-${month}-${year}`;\r\n\r\n    this.stockMarketSymbol = STOCK_MARKET_SYMBOLS[0].value;\r\n    this.socialMedia = SOCIAL_MEDIA_TYPES[0].value;\r\n\r\n    this.onStockMarketSymbolChange = this.onStockMarketSymbolChange.bind(this);\r\n    this.onSocialMediaTypeChange = this.onSocialMediaTypeChange.bind(this);\r\n  }\r\n\r\n  onStockMarketSymbolChange(evt) {\r\n    let selectedSymbol = evt.target.value;\r\n    this.stockMarketSymbol = selectedSymbol;\r\n    this.props.updateTableData(this.stockMarketSymbol, this.socialMedia);\r\n  }\r\n\r\n  onSocialMediaTypeChange(evt) {\r\n    let selectedSocialMediaType = evt.target.value;\r\n    this.socialMedia = selectedSocialMediaType;\r\n    this.props.updateTableData(this.stockMarketSymbol, this.socialMedia);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-bar-container\">\r\n        <StockMarketSymbolsPicker\r\n          onStockMarketSymbolChange={this.onStockMarketSymbolChange}\r\n          options={STOCK_MARKET_SYMBOLS}\r\n        />\r\n        <SocialMediaPicker\r\n          onSocialMediaTypeChange={this.onSocialMediaTypeChange}\r\n          options={SOCIAL_MEDIA_TYPES}\r\n        />\r\n        <DateWindow startDate={this.tenDaysAgo} defaultDate={this.date} />\r\n        <div className=\"search-bar-item-center\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","export const getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n};\r\n","import { getRandomInt } from \"./Utils\";\r\n\r\nimport {\r\n  STOCK_MARKET_SYMBOLS,\r\n  SOCIAL_MEDIA_TYPES\r\n} from \"./../components/config\";\r\n//nasdaq vs nyse vs dow vs tsx\r\n\r\nexport const randomDataGenerator = (\r\n  stockSymbol = STOCK_MARKET_SYMBOLS[0].value,\r\n  socialMediaType = SOCIAL_MEDIA_TYPES[0].value,\r\n  dates = getLastTenDaysDate()\r\n) => {\r\n  const data = [];\r\n\r\n  for (let index = 0; index < dates.length; index++) {\r\n    const date = dates[index];\r\n    const mediaCount = socialMediaCountGenerator(stockSymbol, socialMediaType);\r\n    const stockMarketPrice = stockPriceGenerator(stockSymbol, dates);\r\n    const recommendation = recommendationAlgorithm(\r\n      stockMarketPrice,\r\n      mediaCount\r\n    );\r\n    const elt = {\r\n      date,\r\n      mediaCount,\r\n      stockMarketPrice,\r\n      socialMediaType,\r\n      stockSymbol,\r\n      recommendation\r\n    };\r\n    data.push(elt);\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const stockPriceGenerator = (stockSymbol, dates) => {\r\n  const stockPrice = randomValueByStockSymbol(stockSymbol);\r\n  return stockPrice;\r\n};\r\n\r\nexport const socialMediaCountGenerator = (stockSymbol, socialMediaType) => {\r\n  stockSymbol = stockSymbol.toUpperCase();\r\n  socialMediaType = socialMediaType.toUpperCase();\r\n  if (stockSymbol === \"NASDAQ\" && socialMediaType == \"FACEBOOK\") {\r\n    return randomValueBysocialMediaType(socialMediaType) * 2;\r\n  }\r\n  if (stockSymbol === \"NYSE\" && socialMediaType == \"FACEBOOK\") {\r\n    return randomValueBysocialMediaType(socialMediaType) * 3;\r\n  }\r\n  return randomValueBysocialMediaType(socialMediaType) * 1.5;\r\n};\r\n\r\nexport const recommendationAlgorithm = (stockPrice, socialMediaCount) => {\r\n  if (stockPrice % 2 == 0 && socialMediaCount % 2 == 0) {\r\n    return \"BUY\";\r\n  }\r\n  if (stockPrice.toString().endsWith(9)) {\r\n    return \"SELL\";\r\n  }\r\n  return \"HOLD\";\r\n};\r\n\r\n//random ints\r\nconst randomValueByStockSymbol = stockSymbol => {\r\n  stockSymbol = stockSymbol.toUpperCase();\r\n  switch (stockSymbol) {\r\n    case \"NASDAQ\":\r\n      return getRandomInt(10, 40);\r\n    case \"NYSE\":\r\n      return getRandomInt(10, 50);\r\n    case \"DOWJNS\":\r\n      return getRandomInt(0, 50);\r\n    case \"TSX\":\r\n      return getRandomInt(5, 45);\r\n    default:\r\n      return getRandomInt(0, 90);\r\n  }\r\n};\r\n\r\nconst randomValueBysocialMediaType = socialMediaType => {\r\n  socialMediaType = socialMediaType.toUpperCase();\r\n  switch (socialMediaType) {\r\n    case \"FACEBOOK\":\r\n      // code block\r\n      return getRandomInt(80, 100);\r\n    case \"TWITTER\":\r\n      // code block\r\n      return getRandomInt(65, 90);\r\n    default:\r\n      return getRandomInt(0, 90);\r\n  }\r\n};\r\nexport const getLastTenDaysDate = () => {\r\n  let dates = [];\r\n  var today = new Date();\r\n\r\n  for (let index = 0; index < 9; index++) {\r\n    const temp = today.getDate() - index;\r\n    var date = temp + \"-\" + (today.getMonth() + 1) + \"-\" + today.getFullYear();\r\n    dates.push(date);\r\n  }\r\n\r\n  return dates;\r\n};\r\n","import React from \"react\";\r\nimport \"./recommendation-table.css\";\r\nimport { randomDataGenerator } from \"./../../services/services\";\r\nclass RecommendationTable extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  renderRecommendation = recommendation => {\r\n    switch (recommendation) {\r\n      case \"BUY\":\r\n        return <i class=\"fa fa-angle-double-up\"></i>;\r\n      case \"SELL\":\r\n        return <i class=\"fa fa-angellist\"></i>;\r\n      default:\r\n        return <i class=\"fa fa-angle-double-down\"></i>;\r\n    }\r\n  };\r\n  getTableContent = arr => {\r\n    const iterateItem = item => {\r\n      return item.map((nextItem, j) => {\r\n        return (\r\n          <tr key={nextItem.date + j}>\r\n            <td>{nextItem.date}</td>\r\n            <td>{nextItem.stockSymbol}</td>\r\n            <td>{nextItem.stockMarketPrice}$</td>\r\n            <td>{nextItem.socialMediaType}</td>\r\n            <td>{nextItem.mediaCount}</td>\r\n            <td>\r\n              {nextItem.recommendation}\r\n              <span>{this.renderRecommendation(nextItem.recommendation)}</span>\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    };\r\n    // return arr.map(function(item, i) {\r\n\r\n    return (\r\n      <table id=\"recommendation-table\">\r\n        <th>Date</th>\r\n        <th>Stock Market Symbol</th>\r\n        <th>Stock Market Price</th>\r\n        <th>Social Media type</th>\r\n        <th>Social Media Count</th>\r\n        <th>Recommendation</th>\r\n        <tbody>{iterateItem(arr)}</tbody>\r\n      </table>\r\n    );\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"recommendation-table-container\">\r\n        {this.getTableContent(this.props.data)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecommendationTable;\r\n","import { Chart } from \"react-google-charts\";\r\nimport * as React from \"react\";\r\n\r\nconst options = {\r\n  hAxis: {\r\n    title: \"Date\"\r\n  },\r\n  vAxis: {\r\n    title: \"Stock Market Price vs Social Media Count\"\r\n  },\r\n  series: {\r\n    1: { curveType: \"function\" }\r\n  }\r\n};\r\n\r\nconst convertData = rawData => {\r\n  let data = [];\r\n  for (let index = 0; index < rawData.length; index++) {\r\n    const element = rawData[index];\r\n    let tmp = [element.date, element.stockMarketPrice, element.mediaCount];\r\n    data.push(tmp);\r\n  }\r\n  data = data.reverse();\r\n  data.unshift([\"Date\", \"Stock Market Price\", \"Social Media Count\"]);\r\n  return data;\r\n};\r\n\r\nconst ExampleChart = props => {\r\n  let convertedData = convertData(props.data);\r\n  console.table(convertedData);\r\n  return (\r\n    <Chart\r\n      chartType=\"LineChart\"\r\n      data={convertedData}\r\n      options={options}\r\n      width=\"100%\"\r\n      height=\"400px\"\r\n      legendToggle\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExampleChart;\r\n","import React from \"react\";\nimport { Header } from \"./components/header/header\";\nimport SearchBar from \"./components/search-bar/SearchBar\";\nimport RecommendationTable from \"./components/recommendation-table/RecommendationTable\";\nimport \"./App.css\";\nimport { randomDataGenerator } from \"./services/services\";\nimport ExampleChart from \"./components/chart/chart\";\n// get our fontawesome imports\nclass App extends React.Component {\n  constructor() {\n    super();\n    // this.onStockMarketSymbolChange = this.onStockMarketSymbolChange.bind(this);\n    // this.onSocialMediaTypeChange = this.onSocialMediaTypeChange.bind(this);\n    this.updateTableData = this.updateTableData.bind(this);\n    this.state = {\n      tableData: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.setState(prevState => {\n      return { tableData: randomDataGenerator(), loading: false };\n    });\n  }\n\n  updateTableData(stockMarketSymbol, socialMediaType) {\n    this.setState(prevState => {\n      return {\n        loading: true\n      };\n    });\n    setTimeout(() => {\n      this.setState(prevState => {\n        return {\n          tableData: randomDataGenerator(stockMarketSymbol, socialMediaType),\n          loading: false\n        };\n      });\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header appName=\"Stock Market Recommender\"></Header>\n        <SearchBar updateTableData={this.updateTableData} />\n        {this.state.loading ? (\n          <div>\n            <i className=\"fa fa-spinner fa-spin  fa-7x\"></i>\n          </div>\n        ) : (\n          <>\n            <RecommendationTable data={this.state.tableData} />\n            <ExampleChart data={this.state.tableData} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}